<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Jaziel.dao.CheckGroupDao">
    <resultMap id="baseResultMap" type="com.Jaziel.pojo.CheckGroup">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="helpCode" property="helpCode"/>
        <result column="sex" property="sex"/>
        <result column="remark" property="remark"/>
        <result column="attention" property="attention"/>
    </resultMap>

    <resultMap id="findByIdResultMap" type="com.Jaziel.pojo.CheckGroup" extends="baseResultMap">
        <!--检查组和检查项多对多关联查询-->
        <collection property="checkItems"
                    ofType="com.Jaziel.pojo.CheckItem"
                    column="id"
                    select="com.Jaziel.dao.CheckItemDao.findCheckItemById"
        >
        </collection>
    </resultMap>

    <!--根据套餐ID查询关联的检查组详情-->
    <select id="findCheckGroupById" parameterType="int" resultMap="findByIdResultMap">
        select * from t_checkgroup where id in (select checkgroup_id from t_setmeal_checkgroup where setmeal_id = #{setmeal_id})
    </select>

    <!--添加检查组-->
    <insert id="add" parameterType="checkGroup">
        <!--通过mybatis框架提供的selectKey标签获得自增产生的ID值-->
        <selectKey order="AFTER" resultType="integer" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
        insert into t_checkgroup(code, name, sex, helpCode, remark, attention)
        values (#{code}, #{name}, #{sex}, #{helpCode}, #{remark}, #{attention})
    </insert>

    <!--设置检查组和检查项的关联关系,其中values中的参数需要与实现类中封装key一致-->
    <update id="setGroupAndItem" parameterType="hashmap">
        insert into t_checkgroup_checkitem(checkgroup_id, checkitem_id)
        VALUES (#{checkGroupId}, #{checkItemId})
    </update>

    <!--编辑检查组-->
    <update id="edit" parameterType="checkGroup">
        update t_checkgroup
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="code != null">
                code = #{code},
            </if>
            <if test="helpCode != null">
                helpCode = #{helpCode},
            </if>
            <if test="attention != null">
                attention = #{attention},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--根据检查组清除中间表关系-->
    <delete id="deleteRelation" parameterType="int">
        delete
        from t_checkgroup_checkitem
        where checkgroup_id = #{id}
    </delete>

    <!--根据条件查询检查组条目-->
    <select id="findByString" resultType="checkGroup" parameterType="string">
        select * from t_checkgroup
        <if test="value != null and value.length > 0">
            where code = #{value} or name = #{value} or helpCode = #{value}
        </if>
    </select>

    <!--根据id获得检查组-->
    <select id="findById" resultType="checkGroup" parameterType="int">
        select *
        from t_checkgroup
        where id = #{id}
    </select>

    <!--根据检查组id查询关联的多项检查项-->
    <select id="findCheckItemIdsByCheckGroupId" resultType="int" parameterType="int">
        select checkitem_id
        from t_checkgroup_checkitem
        where checkgroup_id = #{id}
    </select>

    <!--查询所有检查组-->
    <select id="findAll" resultType="checkGroup">
        select *
        from t_checkgroup
    </select>
</mapper>